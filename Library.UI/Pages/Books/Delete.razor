@page "/books/delete/{Id}"

@attribute [Authorize(Roles = "Administrator")]

@inject IBookRepository bookRepo
@inject NavigationManager navManager
@inject IFileUpload fileUpload
@inject IToastService toastService

<h3>Are You Sure You Want to Delete This Record?</h3>
<hr />
<br />
@if (!isSuccess)
{
    <ErrorMessage Message="Something Went Wrong With the Operation" />
}


@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again" />
}
else if (bookModel == null)
{
    <LoadingMessage Message="Loading Book Details" />
}
else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Title</strong>
                    </td>
                    <td>@bookModel.Title</td>
                </tr>
                <tr>
                    <td>
                        <strong>Author</strong>
                    </td>
                    <td>
                        @if (bookModel.Author == null)
                        {
                            <span class="text-muted">No Author Recorded</span>
                        }
                        else
                        {
                            <a href="/authors/view/@bookModel.AuthorId">@bookModel.Author.FirstName @bookModel.Author.LastName</a>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Summary</strong>
                    </td>
                    <td>@bookModel.Summary</td>
                </tr>
                <tr>
                    <td>
                        <strong>Published Year</strong>
                    </td>
                    <td>@bookModel.Year</td>
                </tr>
                <tr>
                    <td>
                        <strong>ISBN</strong>
                    </td>
                    <td>@bookModel.Isbn</td>
                </tr>

            </table>
        </div>
        <div class="col-4">
            <img src="uploads/@bookModel.Image" style="height:300px; width:300px" />
            <h3 class="text-center text-info">@string.Format("{0:C}", bookModel.Price)</h3>
        </div>
    </div>
}

<button @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Delete Book
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private BookModel bookModel = new BookModel();
    private bool isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        bookModel = await bookRepo.Get(Endpoints.BooksEndpoint, id);
    }

    private async Task DeleteBook()
    {
        fileUpload.RemoveFile(bookModel.Image);
        isSuccess = await bookRepo.Delete(Endpoints.BooksEndpoint, bookModel.Id);
        if (isSuccess)
        {
            toastService.ShowError("Book Deleted Successfully", "");
            BackToList();
        }

    }

    private void BackToList()
    {
        navManager.NavigateTo("/books/");
    }

}