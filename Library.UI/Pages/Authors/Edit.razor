@page "/authors/edit/{Id}"

@attribute [Authorize(Roles = "Administrator")]

@inject IAuthorRepository authRepo
@inject NavigationManager navManager
@inject IToastService toastService

<h3 class="card-title">Edit Author</h3>
<hr />
<br />
@if (isSuccess)
{
    <ErrorMessage Message="Somewthing Went Wrong With the Operation" />
}

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again" />
}
else if (authorModel == null)
{
    <LoadingMessage Message="Loading Author For Edit" />
}
else
{
    <EditForm Model="authorModel" OnValidSubmit="EditAuthor">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="firstname">First Name</label>
            <InputText @bind-Value="authorModel.FirstName" class="form-control" id="firstname" />
        </div>
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <InputText @bind-Value="authorModel.LastName" class="form-control" id="lastname" />
        </div>
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputTextArea @bind-Value="authorModel.Bio" class="form-control" id="bio" />
        </div>
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span>
            Save Changes
        </button>
        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span>
            Back To List
        </button>
    </EditForm>
}


@code {
    [Parameter]
    public string Id { get; set; }

    private AuthorModel authorModel = new AuthorModel();
    private bool isSuccess = false;
    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        authorModel = await authRepo.Get(Endpoints.AuthorsEndpoint, id);
    }

    private async Task EditAuthor()
    {
        isSuccess = await authRepo.Update(Endpoints.AuthorsEndpoint, authorModel, authorModel.Id);
        if (isSuccess)
        {
            toastService.ShowWarning("Author Updated Successfully", "");
            BackToList();
        }

    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }
}