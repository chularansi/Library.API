@page "/login"

@inject IAuthenticationRepository authRepo
@inject NavigationManager navManager

<h3 class="card-title">Login</h3>
@if (!response)
{
    <ErrorMessage Message="Something went wrong with Login attempt." />
}

<div class="card-body">
    <EditForm Model="LogModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">Email address</label>
            <InputText class="form-control" id="email" @bind-Value="LogModel.EmailAddress" />
            <ValidationMessage For="@(() => LogModel.EmailAddress)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText type="password" class="form-control" id="password" @bind-Value="LogModel.Password" />
            <ValidationMessage For="@(() => LogModel.Password)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>


@code {
    private LoginModel LogModel = new LoginModel();
    private bool response = true;

    private async Task HandleLogin()
    {
        response = await authRepo.Login(LogModel);

        if (response)
        {
            navManager.NavigateTo("/");
        }
    }
}